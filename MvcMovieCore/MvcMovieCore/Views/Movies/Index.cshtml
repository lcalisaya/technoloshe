@*
    La directiva @model permite acceder a la lista de películas que el controlador pasó a la vista 
    mediante el uso de un objeto Modelo fuertemente tipado
*@

@model MvcMovieCore.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="movieGenre" asp-items="Model.genres">
            <option value="">All</option>
        </select>

        <!-- Como el parámetro de búsqueda se encuentra en el cuerpo de la solicitud y no en la URL, 
            no se puede capturar esa información de búsqueda para marcarla o compartirla con otras personas.
            Por lo tanto, se debe especificar que el parámetro viaje por URL, o sea que se use el método GET -->
        Title: <input type="text" name="searchString" >
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.movies[0].Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movies[0].ReleaseDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movies[0].Genre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movies[0].Price)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.movies) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <!-- Los Tag Helpers permiten que el código del lado del servidor participe en la creación y representación de elementos HTML de archivos Razor -->
                <!-- Ejemplo de cómo queda la ruta <a href="/Movies/Edit/4"> Edit </a> -->
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
